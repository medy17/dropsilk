/* src/styles/components/forms.css */

@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;600;700&family=Inter:wght@400;600;700&display=swap");

.flight-code-input-wrapper {
    display: flex;
    align-items: stretch; /* To make inputs and button same height */
    gap: 0.5rem;
}

.flight-code-input-wrapper.input-error {
    animation: shake 0.5s cubic-bezier(.36, .07, .19, .97) both;
}

.otp-input-container {
    display: flex;
    flex-grow: 1;
    gap: 0.5rem;
}

.otp-input {
    width: 100%; /* flex child */
    flex: 1 1 0;
    min-width: 0;
    font-family: "IBM Plex Mono", monospace;
    font-size: 1.5rem;
    font-weight: 700;
    text-align: center;
    border: 1.5px solid var(--c-primary);
    border-radius: 12px;
    background: var(--c-panel-bg);
    color: var(--c-text-primary);
    outline: none;
    transition: border-color 0.2s, box-shadow 0.2s;
    text-transform: uppercase;
    padding: 0;
    caret-color: transparent;
    box-shadow: 0 1px 4px rgb(91 206 250 / .04);
    line-height: 3.5rem; /* vertical centering */
    /* New: For disabled states */
    cursor: text; /* Default for active input */
}

/* New: Styles for inputs that are not currently the active editable one */
.otp-input.locked {
    pointer-events: none; /* Prevents direct clicking into the input */
    cursor: default; /* No text-editing cursor */
    /*
    opacity: 0.7; !* Slight visual fade for non-interactive inputs *!
    */
}



.otp-input[disabled] {
    opacity: 0.5; /* More disabled look for later empty boxes */
    cursor: not-allowed; /* Clear indication it cannot be interacted with */
}

/* New: Comprehensive Placeholder Styling for subtle appearance */
.otp-input::placeholder {
    /* Resetting all potentially conflicting styles */
    color: var(--c-text-secondary);     /* Subtle color */
    opacity: 0.5;                       /* More subtle transparency */
    font-weight: 500;                   /* Lighter than input's bold */
    text-transform: none;               /* Do not force uppercase */
    letter-spacing: normal;             /* Standard letter spacing */
    font-size: 1.2rem;                  /* Slightly smaller than input text */
    text-shadow: none;                  /* Important: remove any text shadow */
    -webkit-text-fill-color: var(--c-text-secondary); /* For webkit override */
}

/* For specific browser engines */
.otp-input::-webkit-input-placeholder { /* Chrome, Safari, Edge */
    color: var(--c-text-secondary);
    opacity: 0.5;
    font-weight: 500;
    text-transform: none;
    text-shadow: none;
    -webkit-text-fill-color: var(--c-text-secondary); /* Force fill color */
}
.otp-input::-moz-placeholder { /* Firefox */
    color: var(--c-text-secondary);
    opacity: 0.5;
    font-weight: 500;
    text-transform: none;
    text-shadow: none;
    /* Note: -moz-text-fill-color is not standard/reliable, focus on color/opacity */
}
/* For Internet Explorer */
.otp-input:-ms-input-placeholder {
    color: var(--c-text-secondary);
    opacity: 0.5;
    font-weight: 500;
    text-transform: none;
}

.flight-code-input-wrapper.input-error .otp-input {
    border-color: var(--c-danger);
}

/* Keep danger styling when focused */
.flight-code-input-wrapper.input-error .otp-input:focus {
    border-color: var(--c-danger);
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.35);
}

.otp-input.filled {
    color: var(--c-success);
}

.flight-code-input-wrapper.input-error .otp-input.filled {
    color: var(--c-danger);
}


.otp-input:focus {
    border-color: var(--c-primary);
    box-shadow: 0 0 0 3px rgba(91, 206, 250, 0.4); /* Blue focus ring */
    /*
    color: var(--c-text-primary);
    */
}

.flight-code-input-wrapper button {
    flex-shrink: 0;
    width: auto;
    background: var(--c-panel-bg);
    color: var(--c-primary);
    padding: 0;
    cursor: pointer;
    font-size: 1.8em;
    border-radius: 12px;
    border: 1.5px solid var(--c-primary);
    box-shadow: 0 1px 4px rgb(91 206 250 / .04);
    transition: color 0.2s, transform 0.1s ease-out, background 0.2s, border-color 0.2s;
    flex-shrink: 0;
    width: 3.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.flight-code-input-wrapper button:hover {
    background: var(--c-primary);
    color: var(--brilliant-white);
    border-color: var(--c-secondary);
    outline: none;
}

.flight-code-input-wrapper button:focus {
    color: var(--c-secondary);
    background: rgb(91 206 250 / .08);
    outline: none;
}

.flight-code-input-wrapper button:focus {
    color: var(--c-secondary);
    background: rgb(91 206 250 / .08);
    outline: none;
}

.flight-code-input-wrapper button:active {
    transform: scale(.97);
    transition-duration: 0.1s;
}

.checkbox-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    position: relative;
    user-select: none;
    gap: .75rem;
}

.checkbox-label:hover .custom-checkbox {
    border-color: var(--c-primary);
}

.custom-checkbox-input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.custom-checkbox-input:checked + .custom-checkbox {
    background-color: var(--c-primary);
    border-color: var(--c-primary);
    transform: scale(1.05);
}

.custom-checkbox-input:checked + .custom-checkbox::after {
    display: block;
    transform: rotate(45deg) scale(1);
}

.custom-checkbox {
    position: relative;
    display: inline-block;
    width: 20px;
    height: 20px;
    background: var(--c-panel-bg);
    border: 2px solid var(--c-text-secondary);
    border-radius: 6px;
    transition: all 0.2s cubic-bezier(.4, 0, .2, 1);
    flex-shrink: 0;
}

.custom-checkbox::after {
    content: "";
    position: absolute;
    display: none;
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid var(--brilliant-white);
    border-width: 0 3px 3px 0;
    transform: rotate(45deg) scale(0);
    transition: transform 0.2s cubic-bezier(.4, 0, .2, 1);
}

/* Switch slider */
.switch {
    --sw-w: 52px;        /* total width */
    --sw-h: 28px;        /* total height */
    --sw-pad: 3px;       /* inner padding */
    position: relative;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    flex-shrink: 0; /* Prevent the control from being squished */
    width: var(--sw-w);
    height: var(--sw-h);
}

.switch-input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

.switch-track {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 999px;
    background: var(--c-progress-track);
    border: 1.5px solid var(--c-panel-border);
    box-sizing: border-box;
    overflow: hidden; /* keeps the thumb inside */
    transition: background 0.2s, border-color 0.2s;
    padding: var(--sw-pad);
}

.switch-thumb {
    position: absolute;
    top: 50%;
    left: var(--sw-pad);
    transform: translateY(-50%); /* only move vertically */
    box-sizing: border-box;      /* include border in width/height */
    width: calc(var(--sw-h) - var(--sw-pad) * 2);
    height: calc(var(--sw-h) - var(--sw-pad) * 2);
    border-radius: 50%;
    background: var(--c-panel-bg);
    border: 2px solid var(--c-text-secondary);
    transition: left 0.2s, background 0.2s, border-color 0.2s;
}

.switch-input:checked + .switch-track {
    background: linear-gradient(135deg, rgba(91, 206, 250, 0.35), rgba(245, 169, 184, 0.25));
    border-color: var(--c-primary);
}


.switch-input:checked + .switch-track .switch-thumb {
    left: auto;
    right: var(--sw-pad);
    transform: translateY(-50%);
    background: var(--c-primary);
    border-color: var(--c-primary);
}
/* Tri-state segmented control */
.segmented {
    display: flex;
    background: var(--c-panel-bg);
    border: 1.5px solid var(--c-panel-border);
    border-radius: 999px;
    overflow: hidden;
    flex-shrink: 0; /* Prevent the control from being squished */
    max-width: 190px;
    width: 100%;
}
.segmented .seg-btn {
    padding: 0.4rem 0.5rem;
    font-weight: 600;
    font-size: .8em;
    border: none;
    background: none;
    color: var(--c-text-secondary);
    cursor: pointer;
    transition: background 0.2s, color 0.2s;
    flex: 1;
    text-align: center;
    white-space: nowrap;
    min-width: 0;
}
.segmented .seg-btn:hover {
    background: rgb(91 206 250 / .12);
}
.segmented .seg-btn.active {
    background: var(--c-primary);
    color: var(--brilliant-white);
}

/* Number input for settings */
.settings-number-input {
    background: var(--c-panel-bg);
    border: 1.5px solid var(--c-panel-border);
    border-radius: 8px;
    color: var(--c-text-primary);
    padding: 0.5rem 0.75rem;
    font-weight: 600;
    text-align: right;
    width: 85px; /* Adjust width as needed */
    transition: border-color 0.2s, box-shadow 0.2s;
    outline: none;
    -moz-appearance: textfield; /* Firefox */
}

.settings-number-input::-webkit-outer-spin-button,
.settings-number-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.settings-number-input:focus {
    border-color: var(--c-primary);
    box-shadow: 0 0 0 2px rgba(91, 206, 250, 0.2);
}
